{
  "vulnerabilities": {
    "Unbounded Operations": {
      "occurrences": 10,
      "severity": "Medium",
      "recommendation": "Add explicit size limits on collections and iteration operations",
      "impact": "Potential resource exhaustion",
      "name": "Unbounded Operations",
      "affectedContracts": [
        "bitcoin-issuance.clar",
        "dex-adapter.clar",
        "token-economics.clar"
      ],
      "description": "Potential vulnerability found: Operations without resource limits"
    },
    "Unchecked Arithmetic": {
      "occurrences": 54,
      "severity": "High",
      "recommendation": "Add explicit asserts for arithmetic operation boundaries",
      "impact": "Integer overflow/underflow leading to unexpected behavior",
      "name": "Unchecked Arithmetic",
      "affectedContracts": [
        "token-economics.clar",
        "bitcoin-issuance.clar",
        "dex-adapter.clar",
        "security-guards.clar",
        "token-economics.clar"
      ],
      "description": "Potential vulnerability found: Arithmetic operations without overflow checks"
    },
    "Missing Input Validation": {
      "occurrences": 26,
      "severity": "Medium",
      "recommendation": "Add validation for all function parameters",
      "impact": "Accepting invalid inputs leading to unexpected behavior",
      "name": "Missing Input Validation",
      "affectedContracts": [
        "dao-core.clar",
        "token-economics.clar",
        "bitcoin-issuance.clar",
        "dao.clar",
        "dex-adapter.clar",
        "governance_token.clar"
      ],
      "description": "Potential vulnerability found: Function parameters without validation"
    }
  },
  "endTime": "2025-03-16T12:10:57.1129209+02:00",
  "contractAnalysis": {
    "dao.clar": {
      "riskScore": 50,
      "patternResults": {
        "Overflow Protection": {
          "severity": "Critical",
          "required": true,
          "passed": false,
          "name": "Overflow Protection",
          "recommendation": "Add explicit checks for arithmetic overflows",
          "matchCount": 0,
          "description": "Checks for integer overflow protection"
        },
        "Input Validation": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Input Validation",
          "recommendation": "Add explicit validation for all function inputs",
          "matchCount": 12,
          "description": "Checks for input validation"
        },
        "Unauthorized Access": {
          "severity": "Critical",
          "required": true,
          "passed": true,
          "name": "Unauthorized Access",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation",
          "matchCount": 14,
          "description": "Checks for proper authorization controls"
        },
        "Secure Randomness": {
          "severity": "Medium",
          "required": false,
          "passed": true,
          "name": "Secure Randomness",
          "recommendation": "Use unpredictable values as entropy sources",
          "matchCount": 14,
          "description": "Checks for secure randomness"
        },
        "Reentrancy Protection": {
          "severity": "Critical",
          "required": false,
          "passed": false,
          "name": "Reentrancy Protection",
          "recommendation": "Implement reentrancy guards for external calls",
          "matchCount": 0,
          "description": "Checks for reentrancy protection"
        },
        "Error Handling": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Error Handling",
          "recommendation": "Use numeric error codes instead of string error messages",
          "matchCount": 7,
          "description": "Checks for proper error handling"
        },
        "Resource Exhaustion": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Resource Exhaustion",
          "recommendation": "Add limits to resource-intensive operations",
          "matchCount": 0,
          "description": "Checks for resource exhaustion protection"
        }
      },
      "securityScore": 50,
      "riskLevel": "Critical",
      "overallStatus": "VULNERABLE",
      "contractPath": "C:\\Users\\bmokoka\\Downloads\\OPSource\\anya-core\\src\\contracts\\dao.clar",
      "vulnerabilityResults": {
        "Unbounded Operations": {
          "severity": "Medium",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "name": "Unbounded Operations",
          "matchCount": 0,
          "found": false,
          "impact": "Potential resource exhaustion",
          "description": "Operations without resource limits"
        },
        "Unchecked Arithmetic": {
          "severity": "High",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "name": "Unchecked Arithmetic",
          "matchCount": 0,
          "found": false,
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "description": "Arithmetic operations without overflow checks"
        },
        "Missing Input Validation": {
          "severity": "Medium",
          "recommendation": "Add validation for all function parameters",
          "name": "Missing Input Validation",
          "matchCount": 1,
          "found": true,
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "description": "Function parameters without validation"
        },
        "Fixed Authorization": {
          "severity": "High",
          "recommendation": "Implement dynamic authorization through data-vars or maps",
          "name": "Fixed Authorization",
          "matchCount": 0,
          "found": false,
          "impact": "Centralized control, lack of governance",
          "description": "Authorization is hardcoded to a specific principal"
        },
        "String Error Messages": {
          "severity": "Low",
          "recommendation": "Use numeric error codes for all error conditions",
          "name": "String Error Messages",
          "matchCount": 0,
          "found": false,
          "impact": "Inconsistent error handling",
          "description": "Error returns using string messages instead of numeric codes"
        }
      },
      "findings": [
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for integer overflow protection",
          "name": "Overflow Protection",
          "severity": "Critical",
          "recommendation": "Add explicit checks for arithmetic overflows"
        },
        {
          "type": "RecommendedSecurityPattern",
          "description": "Recommended critical security pattern not found: Checks for reentrancy protection",
          "name": "Reentrancy Protection",
          "severity": "Critical",
          "recommendation": "Implement reentrancy guards for external calls"
        },
        {
          "severity": "Medium",
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "name": "Missing Input Validation",
          "recommendation": "Add validation for all function parameters",
          "matchCount": 1,
          "type": "Vulnerability",
          "description": "Potential vulnerability found: Function parameters without validation"
        }
      ],
      "contractName": "dao.clar"
    },
    "token-economics-minimal.clar": {
      "riskScore": 66.66666666666666,
      "patternResults": {
        "Overflow Protection": {
          "severity": "Critical",
          "required": true,
          "passed": false,
          "name": "Overflow Protection",
          "recommendation": "Add explicit checks for arithmetic overflows",
          "matchCount": 0,
          "description": "Checks for integer overflow protection"
        },
        "Input Validation": {
          "severity": "High",
          "required": true,
          "passed": false,
          "name": "Input Validation",
          "recommendation": "Add explicit validation for all function inputs",
          "matchCount": 0,
          "description": "Checks for input validation"
        },
        "Unauthorized Access": {
          "severity": "Critical",
          "required": true,
          "passed": false,
          "name": "Unauthorized Access",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation",
          "matchCount": 0,
          "description": "Checks for proper authorization controls"
        },
        "Secure Randomness": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Secure Randomness",
          "recommendation": "Use unpredictable values as entropy sources",
          "matchCount": 0,
          "description": "Checks for secure randomness"
        },
        "Reentrancy Protection": {
          "severity": "Critical",
          "required": false,
          "passed": false,
          "name": "Reentrancy Protection",
          "recommendation": "Implement reentrancy guards for external calls",
          "matchCount": 0,
          "description": "Checks for reentrancy protection"
        },
        "Error Handling": {
          "severity": "High",
          "required": true,
          "passed": false,
          "name": "Error Handling",
          "recommendation": "Use numeric error codes instead of string error messages",
          "matchCount": 0,
          "description": "Checks for proper error handling"
        },
        "Resource Exhaustion": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Resource Exhaustion",
          "recommendation": "Add limits to resource-intensive operations",
          "matchCount": 0,
          "description": "Checks for resource exhaustion protection"
        }
      },
      "securityScore": 33.33333333333334,
      "riskLevel": "Critical",
      "overallStatus": "VULNERABLE",
      "contractPath": "C:\\Users\\bmokoka\\Downloads\\OPSource\\anya-core\\dao\\extensions\\token-economics-minimal.clar",
      "vulnerabilityResults": {
        "Unbounded Operations": {
          "severity": "Medium",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "name": "Unbounded Operations",
          "matchCount": 0,
          "found": false,
          "impact": "Potential resource exhaustion",
          "description": "Operations without resource limits"
        },
        "Unchecked Arithmetic": {
          "severity": "High",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "name": "Unchecked Arithmetic",
          "matchCount": 0,
          "found": false,
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "description": "Arithmetic operations without overflow checks"
        },
        "Missing Input Validation": {
          "severity": "Medium",
          "recommendation": "Add validation for all function parameters",
          "name": "Missing Input Validation",
          "matchCount": 0,
          "found": false,
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "description": "Function parameters without validation"
        },
        "Fixed Authorization": {
          "severity": "High",
          "recommendation": "Implement dynamic authorization through data-vars or maps",
          "name": "Fixed Authorization",
          "matchCount": 0,
          "found": false,
          "impact": "Centralized control, lack of governance",
          "description": "Authorization is hardcoded to a specific principal"
        },
        "String Error Messages": {
          "severity": "Low",
          "recommendation": "Use numeric error codes for all error conditions",
          "name": "String Error Messages",
          "matchCount": 0,
          "found": false,
          "impact": "Inconsistent error handling",
          "description": "Error returns using string messages instead of numeric codes"
        }
      },
      "findings": [
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for proper authorization controls",
          "name": "Unauthorized Access",
          "severity": "Critical",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation"
        },
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for proper error handling",
          "name": "Error Handling",
          "severity": "High",
          "recommendation": "Use numeric error codes instead of string error messages"
        },
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for input validation",
          "name": "Input Validation",
          "severity": "High",
          "recommendation": "Add explicit validation for all function inputs"
        },
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for integer overflow protection",
          "name": "Overflow Protection",
          "severity": "Critical",
          "recommendation": "Add explicit checks for arithmetic overflows"
        },
        {
          "type": "RecommendedSecurityPattern",
          "description": "Recommended critical security pattern not found: Checks for reentrancy protection",
          "name": "Reentrancy Protection",
          "severity": "Critical",
          "recommendation": "Implement reentrancy guards for external calls"
        }
      ],
      "contractName": "token-economics-minimal.clar"
    },
    "dao-trait.clar": {
      "riskScore": 66.66666666666666,
      "patternResults": {
        "Overflow Protection": {
          "severity": "Critical",
          "required": true,
          "passed": false,
          "name": "Overflow Protection",
          "recommendation": "Add explicit checks for arithmetic overflows",
          "matchCount": 0,
          "description": "Checks for integer overflow protection"
        },
        "Input Validation": {
          "severity": "High",
          "required": true,
          "passed": false,
          "name": "Input Validation",
          "recommendation": "Add explicit validation for all function inputs",
          "matchCount": 0,
          "description": "Checks for input validation"
        },
        "Unauthorized Access": {
          "severity": "Critical",
          "required": true,
          "passed": false,
          "name": "Unauthorized Access",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation",
          "matchCount": 0,
          "description": "Checks for proper authorization controls"
        },
        "Secure Randomness": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Secure Randomness",
          "recommendation": "Use unpredictable values as entropy sources",
          "matchCount": 0,
          "description": "Checks for secure randomness"
        },
        "Reentrancy Protection": {
          "severity": "Critical",
          "required": false,
          "passed": false,
          "name": "Reentrancy Protection",
          "recommendation": "Implement reentrancy guards for external calls",
          "matchCount": 0,
          "description": "Checks for reentrancy protection"
        },
        "Error Handling": {
          "severity": "High",
          "required": true,
          "passed": false,
          "name": "Error Handling",
          "recommendation": "Use numeric error codes instead of string error messages",
          "matchCount": 0,
          "description": "Checks for proper error handling"
        },
        "Resource Exhaustion": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Resource Exhaustion",
          "recommendation": "Add limits to resource-intensive operations",
          "matchCount": 0,
          "description": "Checks for resource exhaustion protection"
        }
      },
      "securityScore": 33.33333333333334,
      "riskLevel": "Critical",
      "overallStatus": "VULNERABLE",
      "contractPath": "C:\\Users\\bmokoka\\Downloads\\OPSource\\anya-core\\dao\\traits\\dao-trait.clar",
      "vulnerabilityResults": {
        "Unbounded Operations": {
          "severity": "Medium",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "name": "Unbounded Operations",
          "matchCount": 0,
          "found": false,
          "impact": "Potential resource exhaustion",
          "description": "Operations without resource limits"
        },
        "Unchecked Arithmetic": {
          "severity": "High",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "name": "Unchecked Arithmetic",
          "matchCount": 0,
          "found": false,
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "description": "Arithmetic operations without overflow checks"
        },
        "Missing Input Validation": {
          "severity": "Medium",
          "recommendation": "Add validation for all function parameters",
          "name": "Missing Input Validation",
          "matchCount": 0,
          "found": false,
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "description": "Function parameters without validation"
        },
        "Fixed Authorization": {
          "severity": "High",
          "recommendation": "Implement dynamic authorization through data-vars or maps",
          "name": "Fixed Authorization",
          "matchCount": 0,
          "found": false,
          "impact": "Centralized control, lack of governance",
          "description": "Authorization is hardcoded to a specific principal"
        },
        "String Error Messages": {
          "severity": "Low",
          "recommendation": "Use numeric error codes for all error conditions",
          "name": "String Error Messages",
          "matchCount": 0,
          "found": false,
          "impact": "Inconsistent error handling",
          "description": "Error returns using string messages instead of numeric codes"
        }
      },
      "findings": [
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for proper authorization controls",
          "name": "Unauthorized Access",
          "severity": "Critical",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation"
        },
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for proper error handling",
          "name": "Error Handling",
          "severity": "High",
          "recommendation": "Use numeric error codes instead of string error messages"
        },
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for input validation",
          "name": "Input Validation",
          "severity": "High",
          "recommendation": "Add explicit validation for all function inputs"
        },
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for integer overflow protection",
          "name": "Overflow Protection",
          "severity": "Critical",
          "recommendation": "Add explicit checks for arithmetic overflows"
        },
        {
          "type": "RecommendedSecurityPattern",
          "description": "Recommended critical security pattern not found: Checks for reentrancy protection",
          "name": "Reentrancy Protection",
          "severity": "Critical",
          "recommendation": "Implement reentrancy guards for external calls"
        }
      ],
      "contractName": "dao-trait.clar"
    },
    "token-economics.clar": {
      "riskScore": 0,
      "patternResults": {
        "Overflow Protection": {
          "severity": "Critical",
          "required": true,
          "passed": true,
          "name": "Overflow Protection",
          "recommendation": "Add explicit checks for arithmetic overflows",
          "matchCount": 4,
          "description": "Checks for integer overflow protection"
        },
        "Input Validation": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Input Validation",
          "recommendation": "Add explicit validation for all function inputs",
          "matchCount": 8,
          "description": "Checks for input validation"
        },
        "Unauthorized Access": {
          "severity": "Critical",
          "required": true,
          "passed": true,
          "name": "Unauthorized Access",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation",
          "matchCount": 5,
          "description": "Checks for proper authorization controls"
        },
        "Secure Randomness": {
          "severity": "Medium",
          "required": false,
          "passed": true,
          "name": "Secure Randomness",
          "recommendation": "Use unpredictable values as entropy sources",
          "matchCount": 11,
          "description": "Checks for secure randomness"
        },
        "Reentrancy Protection": {
          "severity": "Critical",
          "required": false,
          "passed": false,
          "name": "Reentrancy Protection",
          "recommendation": "Implement reentrancy guards for external calls",
          "matchCount": 0,
          "description": "Checks for reentrancy protection"
        },
        "Error Handling": {
          "severity": "High",
          "required": true,
          "passed": false,
          "name": "Error Handling",
          "recommendation": "Use numeric error codes instead of string error messages",
          "matchCount": 0,
          "description": "Checks for proper error handling"
        },
        "Resource Exhaustion": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Resource Exhaustion",
          "recommendation": "Add limits to resource-intensive operations",
          "matchCount": 0,
          "description": "Checks for resource exhaustion protection"
        }
      },
      "securityScore": 100,
      "riskLevel": "Critical",
      "overallStatus": "VULNERABLE",
      "contractPath": "C:\\Users\\bmokoka\\Downloads\\OPSource\\anya-core\\src\\contracts\\token-economics.clar",
      "vulnerabilityResults": {
        "Unbounded Operations": {
          "severity": "Medium",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "name": "Unbounded Operations",
          "matchCount": 3,
          "found": true,
          "impact": "Potential resource exhaustion",
          "description": "Operations without resource limits"
        },
        "Unchecked Arithmetic": {
          "severity": "High",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "name": "Unchecked Arithmetic",
          "matchCount": 4,
          "found": true,
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "description": "Arithmetic operations without overflow checks"
        },
        "Missing Input Validation": {
          "severity": "Medium",
          "recommendation": "Add validation for all function parameters",
          "name": "Missing Input Validation",
          "matchCount": 0,
          "found": false,
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "description": "Function parameters without validation"
        },
        "Fixed Authorization": {
          "severity": "High",
          "recommendation": "Implement dynamic authorization through data-vars or maps",
          "name": "Fixed Authorization",
          "matchCount": 0,
          "found": false,
          "impact": "Centralized control, lack of governance",
          "description": "Authorization is hardcoded to a specific principal"
        },
        "String Error Messages": {
          "severity": "Low",
          "recommendation": "Use numeric error codes for all error conditions",
          "name": "String Error Messages",
          "matchCount": 0,
          "found": false,
          "impact": "Inconsistent error handling",
          "description": "Error returns using string messages instead of numeric codes"
        }
      },
      "findings": [
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for proper error handling",
          "name": "Error Handling",
          "severity": "High",
          "recommendation": "Use numeric error codes instead of string error messages"
        },
        {
          "type": "RecommendedSecurityPattern",
          "description": "Recommended critical security pattern not found: Checks for reentrancy protection",
          "name": "Reentrancy Protection",
          "severity": "Critical",
          "recommendation": "Implement reentrancy guards for external calls"
        },
        {
          "severity": "Medium",
          "impact": "Potential resource exhaustion",
          "name": "Unbounded Operations",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "matchCount": 3,
          "type": "Vulnerability",
          "description": "Potential vulnerability found: Operations without resource limits"
        },
        {
          "severity": "High",
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "name": "Unchecked Arithmetic",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "matchCount": 4,
          "type": "Vulnerability",
          "description": "Potential vulnerability found: Arithmetic operations without overflow checks"
        }
      ],
      "contractName": "token-economics.clar"
    },
    "dex-integration-trait.clar": {
      "riskScore": 66.66666666666666,
      "patternResults": {
        "Overflow Protection": {
          "severity": "Critical",
          "required": true,
          "passed": false,
          "name": "Overflow Protection",
          "recommendation": "Add explicit checks for arithmetic overflows",
          "matchCount": 0,
          "description": "Checks for integer overflow protection"
        },
        "Input Validation": {
          "severity": "High",
          "required": true,
          "passed": false,
          "name": "Input Validation",
          "recommendation": "Add explicit validation for all function inputs",
          "matchCount": 0,
          "description": "Checks for input validation"
        },
        "Unauthorized Access": {
          "severity": "Critical",
          "required": true,
          "passed": false,
          "name": "Unauthorized Access",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation",
          "matchCount": 0,
          "description": "Checks for proper authorization controls"
        },
        "Secure Randomness": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Secure Randomness",
          "recommendation": "Use unpredictable values as entropy sources",
          "matchCount": 0,
          "description": "Checks for secure randomness"
        },
        "Reentrancy Protection": {
          "severity": "Critical",
          "required": false,
          "passed": false,
          "name": "Reentrancy Protection",
          "recommendation": "Implement reentrancy guards for external calls",
          "matchCount": 0,
          "description": "Checks for reentrancy protection"
        },
        "Error Handling": {
          "severity": "High",
          "required": true,
          "passed": false,
          "name": "Error Handling",
          "recommendation": "Use numeric error codes instead of string error messages",
          "matchCount": 0,
          "description": "Checks for proper error handling"
        },
        "Resource Exhaustion": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Resource Exhaustion",
          "recommendation": "Add limits to resource-intensive operations",
          "matchCount": 0,
          "description": "Checks for resource exhaustion protection"
        }
      },
      "securityScore": 33.33333333333334,
      "riskLevel": "Critical",
      "overallStatus": "VULNERABLE",
      "contractPath": "C:\\Users\\bmokoka\\Downloads\\OPSource\\anya-core\\dao\\traits\\dex-integration-trait.clar",
      "vulnerabilityResults": {
        "Unbounded Operations": {
          "severity": "Medium",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "name": "Unbounded Operations",
          "matchCount": 0,
          "found": false,
          "impact": "Potential resource exhaustion",
          "description": "Operations without resource limits"
        },
        "Unchecked Arithmetic": {
          "severity": "High",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "name": "Unchecked Arithmetic",
          "matchCount": 0,
          "found": false,
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "description": "Arithmetic operations without overflow checks"
        },
        "Missing Input Validation": {
          "severity": "Medium",
          "recommendation": "Add validation for all function parameters",
          "name": "Missing Input Validation",
          "matchCount": 0,
          "found": false,
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "description": "Function parameters without validation"
        },
        "Fixed Authorization": {
          "severity": "High",
          "recommendation": "Implement dynamic authorization through data-vars or maps",
          "name": "Fixed Authorization",
          "matchCount": 0,
          "found": false,
          "impact": "Centralized control, lack of governance",
          "description": "Authorization is hardcoded to a specific principal"
        },
        "String Error Messages": {
          "severity": "Low",
          "recommendation": "Use numeric error codes for all error conditions",
          "name": "String Error Messages",
          "matchCount": 0,
          "found": false,
          "impact": "Inconsistent error handling",
          "description": "Error returns using string messages instead of numeric codes"
        }
      },
      "findings": [
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for proper authorization controls",
          "name": "Unauthorized Access",
          "severity": "Critical",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation"
        },
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for proper error handling",
          "name": "Error Handling",
          "severity": "High",
          "recommendation": "Use numeric error codes instead of string error messages"
        },
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for input validation",
          "name": "Input Validation",
          "severity": "High",
          "recommendation": "Add explicit validation for all function inputs"
        },
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for integer overflow protection",
          "name": "Overflow Protection",
          "severity": "Critical",
          "recommendation": "Add explicit checks for arithmetic overflows"
        },
        {
          "type": "RecommendedSecurityPattern",
          "description": "Recommended critical security pattern not found: Checks for reentrancy protection",
          "name": "Reentrancy Protection",
          "severity": "Critical",
          "recommendation": "Implement reentrancy guards for external calls"
        }
      ],
      "contractName": "dex-integration-trait.clar"
    },
    "governance_token.clar": {
      "riskScore": 50,
      "patternResults": {
        "Overflow Protection": {
          "severity": "Critical",
          "required": true,
          "passed": false,
          "name": "Overflow Protection",
          "recommendation": "Add explicit checks for arithmetic overflows",
          "matchCount": 0,
          "description": "Checks for integer overflow protection"
        },
        "Input Validation": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Input Validation",
          "recommendation": "Add explicit validation for all function inputs",
          "matchCount": 8,
          "description": "Checks for input validation"
        },
        "Unauthorized Access": {
          "severity": "Critical",
          "required": true,
          "passed": true,
          "name": "Unauthorized Access",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation",
          "matchCount": 10,
          "description": "Checks for proper authorization controls"
        },
        "Secure Randomness": {
          "severity": "Medium",
          "required": false,
          "passed": true,
          "name": "Secure Randomness",
          "recommendation": "Use unpredictable values as entropy sources",
          "matchCount": 6,
          "description": "Checks for secure randomness"
        },
        "Reentrancy Protection": {
          "severity": "Critical",
          "required": false,
          "passed": false,
          "name": "Reentrancy Protection",
          "recommendation": "Implement reentrancy guards for external calls",
          "matchCount": 0,
          "description": "Checks for reentrancy protection"
        },
        "Error Handling": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Error Handling",
          "recommendation": "Use numeric error codes instead of string error messages",
          "matchCount": 4,
          "description": "Checks for proper error handling"
        },
        "Resource Exhaustion": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Resource Exhaustion",
          "recommendation": "Add limits to resource-intensive operations",
          "matchCount": 0,
          "description": "Checks for resource exhaustion protection"
        }
      },
      "securityScore": 50,
      "riskLevel": "Critical",
      "overallStatus": "VULNERABLE",
      "contractPath": "C:\\Users\\bmokoka\\Downloads\\OPSource\\anya-core\\src\\contracts\\governance_token.clar",
      "vulnerabilityResults": {
        "Unbounded Operations": {
          "severity": "Medium",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "name": "Unbounded Operations",
          "matchCount": 0,
          "found": false,
          "impact": "Potential resource exhaustion",
          "description": "Operations without resource limits"
        },
        "Unchecked Arithmetic": {
          "severity": "High",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "name": "Unchecked Arithmetic",
          "matchCount": 0,
          "found": false,
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "description": "Arithmetic operations without overflow checks"
        },
        "Missing Input Validation": {
          "severity": "Medium",
          "recommendation": "Add validation for all function parameters",
          "name": "Missing Input Validation",
          "matchCount": 2,
          "found": true,
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "description": "Function parameters without validation"
        },
        "Fixed Authorization": {
          "severity": "High",
          "recommendation": "Implement dynamic authorization through data-vars or maps",
          "name": "Fixed Authorization",
          "matchCount": 0,
          "found": false,
          "impact": "Centralized control, lack of governance",
          "description": "Authorization is hardcoded to a specific principal"
        },
        "String Error Messages": {
          "severity": "Low",
          "recommendation": "Use numeric error codes for all error conditions",
          "name": "String Error Messages",
          "matchCount": 0,
          "found": false,
          "impact": "Inconsistent error handling",
          "description": "Error returns using string messages instead of numeric codes"
        }
      },
      "findings": [
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for integer overflow protection",
          "name": "Overflow Protection",
          "severity": "Critical",
          "recommendation": "Add explicit checks for arithmetic overflows"
        },
        {
          "type": "RecommendedSecurityPattern",
          "description": "Recommended critical security pattern not found: Checks for reentrancy protection",
          "name": "Reentrancy Protection",
          "severity": "Critical",
          "recommendation": "Implement reentrancy guards for external calls"
        },
        {
          "severity": "Medium",
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "name": "Missing Input Validation",
          "recommendation": "Add validation for all function parameters",
          "matchCount": 2,
          "type": "Vulnerability",
          "description": "Potential vulnerability found: Function parameters without validation"
        }
      ],
      "contractName": "governance_token.clar"
    },
    "dao-core.clar": {
      "riskScore": 50,
      "patternResults": {
        "Overflow Protection": {
          "severity": "Critical",
          "required": true,
          "passed": false,
          "name": "Overflow Protection",
          "recommendation": "Add explicit checks for arithmetic overflows",
          "matchCount": 0,
          "description": "Checks for integer overflow protection"
        },
        "Input Validation": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Input Validation",
          "recommendation": "Add explicit validation for all function inputs",
          "matchCount": 2,
          "description": "Checks for input validation"
        },
        "Unauthorized Access": {
          "severity": "Critical",
          "required": true,
          "passed": true,
          "name": "Unauthorized Access",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation",
          "matchCount": 3,
          "description": "Checks for proper authorization controls"
        },
        "Secure Randomness": {
          "severity": "Medium",
          "required": false,
          "passed": true,
          "name": "Secure Randomness",
          "recommendation": "Use unpredictable values as entropy sources",
          "matchCount": 2,
          "description": "Checks for secure randomness"
        },
        "Reentrancy Protection": {
          "severity": "Critical",
          "required": false,
          "passed": false,
          "name": "Reentrancy Protection",
          "recommendation": "Implement reentrancy guards for external calls",
          "matchCount": 0,
          "description": "Checks for reentrancy protection"
        },
        "Error Handling": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Error Handling",
          "recommendation": "Use numeric error codes instead of string error messages",
          "matchCount": 5,
          "description": "Checks for proper error handling"
        },
        "Resource Exhaustion": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Resource Exhaustion",
          "recommendation": "Add limits to resource-intensive operations",
          "matchCount": 0,
          "description": "Checks for resource exhaustion protection"
        }
      },
      "securityScore": 50,
      "riskLevel": "Critical",
      "overallStatus": "VULNERABLE",
      "contractPath": "C:\\Users\\bmokoka\\Downloads\\OPSource\\anya-core\\src\\contracts\\dao-core.clar",
      "vulnerabilityResults": {
        "Unbounded Operations": {
          "severity": "Medium",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "name": "Unbounded Operations",
          "matchCount": 0,
          "found": false,
          "impact": "Potential resource exhaustion",
          "description": "Operations without resource limits"
        },
        "Unchecked Arithmetic": {
          "severity": "High",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "name": "Unchecked Arithmetic",
          "matchCount": 0,
          "found": false,
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "description": "Arithmetic operations without overflow checks"
        },
        "Missing Input Validation": {
          "severity": "Medium",
          "recommendation": "Add validation for all function parameters",
          "name": "Missing Input Validation",
          "matchCount": 0,
          "found": false,
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "description": "Function parameters without validation"
        },
        "Fixed Authorization": {
          "severity": "High",
          "recommendation": "Implement dynamic authorization through data-vars or maps",
          "name": "Fixed Authorization",
          "matchCount": 0,
          "found": false,
          "impact": "Centralized control, lack of governance",
          "description": "Authorization is hardcoded to a specific principal"
        },
        "String Error Messages": {
          "severity": "Low",
          "recommendation": "Use numeric error codes for all error conditions",
          "name": "String Error Messages",
          "matchCount": 0,
          "found": false,
          "impact": "Inconsistent error handling",
          "description": "Error returns using string messages instead of numeric codes"
        }
      },
      "findings": [
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for integer overflow protection",
          "name": "Overflow Protection",
          "severity": "Critical",
          "recommendation": "Add explicit checks for arithmetic overflows"
        },
        {
          "type": "RecommendedSecurityPattern",
          "description": "Recommended critical security pattern not found: Checks for reentrancy protection",
          "name": "Reentrancy Protection",
          "severity": "Critical",
          "recommendation": "Implement reentrancy guards for external calls"
        }
      ],
      "contractName": "dao-core.clar"
    },
    "security-guards.clar": {
      "riskScore": 0,
      "patternResults": {
        "Overflow Protection": {
          "severity": "Critical",
          "required": true,
          "passed": true,
          "name": "Overflow Protection",
          "recommendation": "Add explicit checks for arithmetic overflows",
          "matchCount": 1,
          "description": "Checks for integer overflow protection"
        },
        "Input Validation": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Input Validation",
          "recommendation": "Add explicit validation for all function inputs",
          "matchCount": 7,
          "description": "Checks for input validation"
        },
        "Unauthorized Access": {
          "severity": "Critical",
          "required": true,
          "passed": true,
          "name": "Unauthorized Access",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation",
          "matchCount": 7,
          "description": "Checks for proper authorization controls"
        },
        "Secure Randomness": {
          "severity": "Medium",
          "required": false,
          "passed": true,
          "name": "Secure Randomness",
          "recommendation": "Use unpredictable values as entropy sources",
          "matchCount": 5,
          "description": "Checks for secure randomness"
        },
        "Reentrancy Protection": {
          "severity": "Critical",
          "required": false,
          "passed": false,
          "name": "Reentrancy Protection",
          "recommendation": "Implement reentrancy guards for external calls",
          "matchCount": 0,
          "description": "Checks for reentrancy protection"
        },
        "Error Handling": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Error Handling",
          "recommendation": "Use numeric error codes instead of string error messages",
          "matchCount": 6,
          "description": "Checks for proper error handling"
        },
        "Resource Exhaustion": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Resource Exhaustion",
          "recommendation": "Add limits to resource-intensive operations",
          "matchCount": 0,
          "description": "Checks for resource exhaustion protection"
        }
      },
      "securityScore": 100,
      "riskLevel": "Critical",
      "overallStatus": "WARNINGS",
      "contractPath": "C:\\Users\\bmokoka\\Downloads\\OPSource\\anya-core\\src\\contracts\\security-guards.clar",
      "vulnerabilityResults": {
        "Unbounded Operations": {
          "severity": "Medium",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "name": "Unbounded Operations",
          "matchCount": 0,
          "found": false,
          "impact": "Potential resource exhaustion",
          "description": "Operations without resource limits"
        },
        "Unchecked Arithmetic": {
          "severity": "High",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "name": "Unchecked Arithmetic",
          "matchCount": 1,
          "found": true,
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "description": "Arithmetic operations without overflow checks"
        },
        "Missing Input Validation": {
          "severity": "Medium",
          "recommendation": "Add validation for all function parameters",
          "name": "Missing Input Validation",
          "matchCount": 0,
          "found": false,
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "description": "Function parameters without validation"
        },
        "Fixed Authorization": {
          "severity": "High",
          "recommendation": "Implement dynamic authorization through data-vars or maps",
          "name": "Fixed Authorization",
          "matchCount": 0,
          "found": false,
          "impact": "Centralized control, lack of governance",
          "description": "Authorization is hardcoded to a specific principal"
        },
        "String Error Messages": {
          "severity": "Low",
          "recommendation": "Use numeric error codes for all error conditions",
          "name": "String Error Messages",
          "matchCount": 0,
          "found": false,
          "impact": "Inconsistent error handling",
          "description": "Error returns using string messages instead of numeric codes"
        }
      },
      "findings": [
        {
          "type": "RecommendedSecurityPattern",
          "description": "Recommended critical security pattern not found: Checks for reentrancy protection",
          "name": "Reentrancy Protection",
          "severity": "Critical",
          "recommendation": "Implement reentrancy guards for external calls"
        },
        {
          "severity": "High",
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "name": "Unchecked Arithmetic",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "matchCount": 1,
          "type": "Vulnerability",
          "description": "Potential vulnerability found: Arithmetic operations without overflow checks"
        }
      ],
      "contractName": "security-guards.clar"
    },
    "bip-compliance.clar": {
      "riskScore": 66.66666666666666,
      "patternResults": {
        "Overflow Protection": {
          "severity": "Critical",
          "required": true,
          "passed": false,
          "name": "Overflow Protection",
          "recommendation": "Add explicit checks for arithmetic overflows",
          "matchCount": 0,
          "description": "Checks for integer overflow protection"
        },
        "Input Validation": {
          "severity": "High",
          "required": true,
          "passed": false,
          "name": "Input Validation",
          "recommendation": "Add explicit validation for all function inputs",
          "matchCount": 0,
          "description": "Checks for input validation"
        },
        "Unauthorized Access": {
          "severity": "Critical",
          "required": true,
          "passed": false,
          "name": "Unauthorized Access",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation",
          "matchCount": 0,
          "description": "Checks for proper authorization controls"
        },
        "Secure Randomness": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Secure Randomness",
          "recommendation": "Use unpredictable values as entropy sources",
          "matchCount": 0,
          "description": "Checks for secure randomness"
        },
        "Reentrancy Protection": {
          "severity": "Critical",
          "required": false,
          "passed": false,
          "name": "Reentrancy Protection",
          "recommendation": "Implement reentrancy guards for external calls",
          "matchCount": 0,
          "description": "Checks for reentrancy protection"
        },
        "Error Handling": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Error Handling",
          "recommendation": "Use numeric error codes instead of string error messages",
          "matchCount": 1,
          "description": "Checks for proper error handling"
        },
        "Resource Exhaustion": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Resource Exhaustion",
          "recommendation": "Add limits to resource-intensive operations",
          "matchCount": 0,
          "description": "Checks for resource exhaustion protection"
        }
      },
      "securityScore": 33.33333333333334,
      "riskLevel": "Critical",
      "overallStatus": "VULNERABLE",
      "contractPath": "C:\\Users\\bmokoka\\Downloads\\OPSource\\anya-core\\src\\contracts\\bip-compliance.clar",
      "vulnerabilityResults": {
        "Unbounded Operations": {
          "severity": "Medium",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "name": "Unbounded Operations",
          "matchCount": 0,
          "found": false,
          "impact": "Potential resource exhaustion",
          "description": "Operations without resource limits"
        },
        "Unchecked Arithmetic": {
          "severity": "High",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "name": "Unchecked Arithmetic",
          "matchCount": 0,
          "found": false,
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "description": "Arithmetic operations without overflow checks"
        },
        "Missing Input Validation": {
          "severity": "Medium",
          "recommendation": "Add validation for all function parameters",
          "name": "Missing Input Validation",
          "matchCount": 0,
          "found": false,
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "description": "Function parameters without validation"
        },
        "Fixed Authorization": {
          "severity": "High",
          "recommendation": "Implement dynamic authorization through data-vars or maps",
          "name": "Fixed Authorization",
          "matchCount": 0,
          "found": false,
          "impact": "Centralized control, lack of governance",
          "description": "Authorization is hardcoded to a specific principal"
        },
        "String Error Messages": {
          "severity": "Low",
          "recommendation": "Use numeric error codes for all error conditions",
          "name": "String Error Messages",
          "matchCount": 0,
          "found": false,
          "impact": "Inconsistent error handling",
          "description": "Error returns using string messages instead of numeric codes"
        }
      },
      "findings": [
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for proper authorization controls",
          "name": "Unauthorized Access",
          "severity": "Critical",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation"
        },
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for input validation",
          "name": "Input Validation",
          "severity": "High",
          "recommendation": "Add explicit validation for all function inputs"
        },
        {
          "type": "MissingSecurityPattern",
          "description": "Required security pattern not found: Checks for integer overflow protection",
          "name": "Overflow Protection",
          "severity": "Critical",
          "recommendation": "Add explicit checks for arithmetic overflows"
        },
        {
          "type": "RecommendedSecurityPattern",
          "description": "Recommended critical security pattern not found: Checks for reentrancy protection",
          "name": "Reentrancy Protection",
          "severity": "Critical",
          "recommendation": "Implement reentrancy guards for external calls"
        }
      ],
      "contractName": "bip-compliance.clar"
    },
    "dex-adapter.clar": {
      "riskScore": 0,
      "patternResults": {
        "Overflow Protection": {
          "severity": "Critical",
          "required": true,
          "passed": true,
          "name": "Overflow Protection",
          "recommendation": "Add explicit checks for arithmetic overflows",
          "matchCount": 26,
          "description": "Checks for integer overflow protection"
        },
        "Input Validation": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Input Validation",
          "recommendation": "Add explicit validation for all function inputs",
          "matchCount": 53,
          "description": "Checks for input validation"
        },
        "Unauthorized Access": {
          "severity": "Critical",
          "required": true,
          "passed": true,
          "name": "Unauthorized Access",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation",
          "matchCount": 46,
          "description": "Checks for proper authorization controls"
        },
        "Secure Randomness": {
          "severity": "Medium",
          "required": false,
          "passed": true,
          "name": "Secure Randomness",
          "recommendation": "Use unpredictable values as entropy sources",
          "matchCount": 22,
          "description": "Checks for secure randomness"
        },
        "Reentrancy Protection": {
          "severity": "Critical",
          "required": false,
          "passed": false,
          "name": "Reentrancy Protection",
          "recommendation": "Implement reentrancy guards for external calls",
          "matchCount": 0,
          "description": "Checks for reentrancy protection"
        },
        "Error Handling": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Error Handling",
          "recommendation": "Use numeric error codes instead of string error messages",
          "matchCount": 4,
          "description": "Checks for proper error handling"
        },
        "Resource Exhaustion": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Resource Exhaustion",
          "recommendation": "Add limits to resource-intensive operations",
          "matchCount": 0,
          "description": "Checks for resource exhaustion protection"
        }
      },
      "securityScore": 100,
      "riskLevel": "Critical",
      "overallStatus": "WARNINGS",
      "contractPath": "C:\\Users\\bmokoka\\Downloads\\OPSource\\anya-core\\src\\contracts\\dex-adapter.clar",
      "vulnerabilityResults": {
        "Unbounded Operations": {
          "severity": "Medium",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "name": "Unbounded Operations",
          "matchCount": 2,
          "found": true,
          "impact": "Potential resource exhaustion",
          "description": "Operations without resource limits"
        },
        "Unchecked Arithmetic": {
          "severity": "High",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "name": "Unchecked Arithmetic",
          "matchCount": 26,
          "found": true,
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "description": "Arithmetic operations without overflow checks"
        },
        "Missing Input Validation": {
          "severity": "Medium",
          "recommendation": "Add validation for all function parameters",
          "name": "Missing Input Validation",
          "matchCount": 4,
          "found": true,
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "description": "Function parameters without validation"
        },
        "Fixed Authorization": {
          "severity": "High",
          "recommendation": "Implement dynamic authorization through data-vars or maps",
          "name": "Fixed Authorization",
          "matchCount": 0,
          "found": false,
          "impact": "Centralized control, lack of governance",
          "description": "Authorization is hardcoded to a specific principal"
        },
        "String Error Messages": {
          "severity": "Low",
          "recommendation": "Use numeric error codes for all error conditions",
          "name": "String Error Messages",
          "matchCount": 0,
          "found": false,
          "impact": "Inconsistent error handling",
          "description": "Error returns using string messages instead of numeric codes"
        }
      },
      "findings": [
        {
          "type": "RecommendedSecurityPattern",
          "description": "Recommended critical security pattern not found: Checks for reentrancy protection",
          "name": "Reentrancy Protection",
          "severity": "Critical",
          "recommendation": "Implement reentrancy guards for external calls"
        },
        {
          "severity": "Medium",
          "impact": "Potential resource exhaustion",
          "name": "Unbounded Operations",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "matchCount": 2,
          "type": "Vulnerability",
          "description": "Potential vulnerability found: Operations without resource limits"
        },
        {
          "severity": "High",
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "name": "Unchecked Arithmetic",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "matchCount": 26,
          "type": "Vulnerability",
          "description": "Potential vulnerability found: Arithmetic operations without overflow checks"
        },
        {
          "severity": "Medium",
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "name": "Missing Input Validation",
          "recommendation": "Add validation for all function parameters",
          "matchCount": 4,
          "type": "Vulnerability",
          "description": "Potential vulnerability found: Function parameters without validation"
        }
      ],
      "contractName": "dex-adapter.clar"
    },
    "bitcoin-issuance.clar": {
      "riskScore": 0,
      "patternResults": {
        "Overflow Protection": {
          "severity": "Critical",
          "required": true,
          "passed": true,
          "name": "Overflow Protection",
          "recommendation": "Add explicit checks for arithmetic overflows",
          "matchCount": 11,
          "description": "Checks for integer overflow protection"
        },
        "Input Validation": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Input Validation",
          "recommendation": "Add explicit validation for all function inputs",
          "matchCount": 18,
          "description": "Checks for input validation"
        },
        "Unauthorized Access": {
          "severity": "Critical",
          "required": true,
          "passed": true,
          "name": "Unauthorized Access",
          "recommendation": "Implement authorization checks using tx-sender or contract-caller validation",
          "matchCount": 21,
          "description": "Checks for proper authorization controls"
        },
        "Secure Randomness": {
          "severity": "Medium",
          "required": false,
          "passed": true,
          "name": "Secure Randomness",
          "recommendation": "Use unpredictable values as entropy sources",
          "matchCount": 14,
          "description": "Checks for secure randomness"
        },
        "Reentrancy Protection": {
          "severity": "Critical",
          "required": false,
          "passed": false,
          "name": "Reentrancy Protection",
          "recommendation": "Implement reentrancy guards for external calls",
          "matchCount": 0,
          "description": "Checks for reentrancy protection"
        },
        "Error Handling": {
          "severity": "High",
          "required": true,
          "passed": true,
          "name": "Error Handling",
          "recommendation": "Use numeric error codes instead of string error messages",
          "matchCount": 3,
          "description": "Checks for proper error handling"
        },
        "Resource Exhaustion": {
          "severity": "Medium",
          "required": false,
          "passed": false,
          "name": "Resource Exhaustion",
          "recommendation": "Add limits to resource-intensive operations",
          "matchCount": 0,
          "description": "Checks for resource exhaustion protection"
        }
      },
      "securityScore": 100,
      "riskLevel": "Critical",
      "overallStatus": "WARNINGS",
      "contractPath": "C:\\Users\\bmokoka\\Downloads\\OPSource\\anya-core\\src\\contracts\\bitcoin-issuance.clar",
      "vulnerabilityResults": {
        "Unbounded Operations": {
          "severity": "Medium",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "name": "Unbounded Operations",
          "matchCount": 5,
          "found": true,
          "impact": "Potential resource exhaustion",
          "description": "Operations without resource limits"
        },
        "Unchecked Arithmetic": {
          "severity": "High",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "name": "Unchecked Arithmetic",
          "matchCount": 11,
          "found": true,
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "description": "Arithmetic operations without overflow checks"
        },
        "Missing Input Validation": {
          "severity": "Medium",
          "recommendation": "Add validation for all function parameters",
          "name": "Missing Input Validation",
          "matchCount": 5,
          "found": true,
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "description": "Function parameters without validation"
        },
        "Fixed Authorization": {
          "severity": "High",
          "recommendation": "Implement dynamic authorization through data-vars or maps",
          "name": "Fixed Authorization",
          "matchCount": 0,
          "found": false,
          "impact": "Centralized control, lack of governance",
          "description": "Authorization is hardcoded to a specific principal"
        },
        "String Error Messages": {
          "severity": "Low",
          "recommendation": "Use numeric error codes for all error conditions",
          "name": "String Error Messages",
          "matchCount": 0,
          "found": false,
          "impact": "Inconsistent error handling",
          "description": "Error returns using string messages instead of numeric codes"
        }
      },
      "findings": [
        {
          "type": "RecommendedSecurityPattern",
          "description": "Recommended critical security pattern not found: Checks for reentrancy protection",
          "name": "Reentrancy Protection",
          "severity": "Critical",
          "recommendation": "Implement reentrancy guards for external calls"
        },
        {
          "severity": "Medium",
          "impact": "Potential resource exhaustion",
          "name": "Unbounded Operations",
          "recommendation": "Add explicit size limits on collections and iteration operations",
          "matchCount": 5,
          "type": "Vulnerability",
          "description": "Potential vulnerability found: Operations without resource limits"
        },
        {
          "severity": "High",
          "impact": "Integer overflow/underflow leading to unexpected behavior",
          "name": "Unchecked Arithmetic",
          "recommendation": "Add explicit asserts for arithmetic operation boundaries",
          "matchCount": 11,
          "type": "Vulnerability",
          "description": "Potential vulnerability found: Arithmetic operations without overflow checks"
        },
        {
          "severity": "Medium",
          "impact": "Accepting invalid inputs leading to unexpected behavior",
          "name": "Missing Input Validation",
          "recommendation": "Add validation for all function parameters",
          "matchCount": 5,
          "type": "Vulnerability",
          "description": "Potential vulnerability found: Function parameters without validation"
        }
      ],
      "contractName": "bitcoin-issuance.clar"
    }
  },
  "startTime": "2025-03-16T12:10:56.159706+02:00",
  "duration": 0.9532149,
  "riskProfiles": {
    "Critical": {
      "contracts": [
        "dao-core.clar",
        "dao-trait.clar",
        "dex-integration-trait.clar",
        "token-economics-minimal.clar",
        "token-economics.clar",
        "bip-compliance.clar",
        "bitcoin-issuance.clar",
        "dao-core.clar",
        "dao.clar",
        "dex-adapter.clar",
        "governance_token.clar",
        "security-guards.clar",
        "token-economics.clar"
      ],
      "level": "Critical",
      "count": 13
    }
  },
  "summary": {
    "mediumRisks": 0,
    "criticalRisks": 13,
    "totalContracts": 13,
    "overallRiskScore": 37.88,
    "lowRisks": 0,
    "securityScore": 62.12,
    "highRisks": 0,
    "securePasses": 0
  }
}
