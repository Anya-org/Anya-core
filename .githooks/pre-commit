#!/usr/bin/env sh
# Pre-commit hook: AI label validation
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)
if [ -z "$STAGED_FILES" ]; then
  echo "No staged files to validate."
  exit 0
fi
printf "%s\n" $STAGED_FILES > "$(git rev-parse --git-dir)/tmp_staged_files.txt"
pwsh -ExecutionPolicy Bypass -File scripts/validate_ai_labels.ps1 -stagedFiles "$(git rev-parse --git-dir)/tmp_staged_files.txt"
RESULT=$?
rm "$(git rev-parse --git-dir)/tmp_staged_files.txt"
if [ $RESULT -ne 0 ]; then
  echo "AI label validation failed. Please fix issues before committing."
  exit 1
fi
exit 0

# Pre-commit hook: lightweight secret scanning & deny quickly
# Configure with: git config core.hooksPath .githooks
# Optional: export GITLEAKS_LICENSE in env for enterprise rules

RED="\033[1;31m"; NC="\033[0m";

if [ -f scripts/f_drive_offload.sh ]; then
  bash scripts/f_drive_offload.sh scan-secrets >/dev/null || true
  bash scripts/f_drive_offload.sh scan-secrets-deep >/dev/null || true
fi

if command -v gitleaks >/dev/null 2>&1; then
  if ! gitleaks protect --staged --redact >/dev/null 2>&1; then
    echo -e "${RED}Potential secret detected by gitleaks; aborting commit.${NC}" >&2
    exit 1
  fi
fi

if command -v cargo-deny >/dev/null 2>&1; then
  cargo deny check licenses >/dev/null 2>&1 || echo "(cargo-deny license scan non-blocking)"
fi

exit 0
