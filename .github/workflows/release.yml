name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy
          
      - name: Build
        run: cargo build --release
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/release/anya-core
            target/release/anya-cli
          draft: false
          prerelease: false
          
      - name: Update Version
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const version = tag.replace('v', '');
            
            // Update Cargo.toml version
            const cargoToml = await github.rest.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'Cargo.toml'
            });
            
            const content = Buffer.from(cargoToml.data.content, 'base64').toString();
            const updatedContent = content.replace(
              /^version = ".*"$/m,
              `version = "${version}"`
            );
            
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'Cargo.toml',
              message: `chore: bump version to ${version}`,
              content: Buffer.from(updatedContent).toString('base64'),
              sha: cargoToml.data.sha
            });
            
      - name: Create Release PR
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const version = tag.replace('v', '');
            
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `chore: release ${version}`,
              head: `release/${version}`,
              base: 'main',
              body: `Release version ${version}\n\nChanges:\n- Updated version in Cargo.toml\n- Created release artifacts`
            });