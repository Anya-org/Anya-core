#!/bin/bash
# Simple and Reliable CI Metrics Generation
# Generates clean JSON metrics for CI/CD pipeline analysis

set -euo pipefail

PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

# Generate clean JSON metrics
generate_simple_metrics() {
    local timestamp=$(date -u +%Y-%m-%dT%H:%M:%SZ)
    
    # Basic repository info
    local commit_count=$(git rev-list --count HEAD 2>/dev/null || echo "0")
    local current_branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "unknown")
    local latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "none")
    
    # Rust project info
    local has_cargo="false"
    local workspace_members="0"
    if [[ -f "Cargo.toml" ]] && command -v cargo &>/dev/null; then
        has_cargo="true"
        workspace_members=$(cargo metadata --format-version=1 2>/dev/null | jq -r '.workspace_members | length' 2>/dev/null || echo "1")
    fi
    
    # Security status
    local audit_available="false"
    if command -v cargo &>/dev/null && cargo install --list 2>/dev/null | grep -q cargo-audit; then
        audit_available="true"
    fi
    
    # System info
    local os_name=$(uname -s)
    local arch=$(uname -m)
    
    cat > "$PROJECT_ROOT/ci_metrics.json" << EOF
{
  "generated_at": "$timestamp",
  "pipeline_version": "2025.1",
  "repository": {
    "total_commits": $commit_count,
    "current_branch": "$current_branch",
    "latest_tag": "$latest_tag"
  },
  "rust": {
    "cargo_available": $has_cargo,
    "workspace_members": $workspace_members
  },
  "security": {
    "audit_tool_available": $audit_available,
    "scan_timestamp": "$timestamp"
  },
  "system": {
    "os": "$os_name",
    "architecture": "$arch"
  },
  "ci_health": "healthy"
}
EOF
    
    echo "✅ Simple metrics generated: ci_metrics.json"
}

# Generate human-readable summary
generate_simple_summary() {
    cat > "$PROJECT_ROOT/ci_metrics_summary.md" << EOF
# CI/CD Metrics Summary

**Generated**: $(date)
**Pipeline Version**: 2025.1

## 📊 Repository Status

- **Total Commits**: $(git rev-list --count HEAD 2>/dev/null || echo "N/A")
- **Current Branch**: $(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "unknown")
- **Latest Tag**: $(git describe --tags --abbrev=0 2>/dev/null || echo "none")

## 🦀 Rust Environment

$(if [[ -f "Cargo.toml" ]] && command -v cargo &>/dev/null; then
    echo "- **Status**: ✅ Available"
    echo "- **Rust Version**: $(rustc --version 2>/dev/null || echo "N/A")"
    echo "- **Cargo Version**: $(cargo --version 2>/dev/null || echo "N/A")"
else
    echo "- **Status**: ❌ Not detected"
fi)

## 🔒 Security Tools

$(if command -v cargo &>/dev/null && cargo install --list 2>/dev/null | grep -q cargo-audit; then
    echo "- **Cargo Audit**: ✅ Available"
else
    echo "- **Cargo Audit**: ❌ Not installed"
fi)

## 🏗️ CI/CD Status

- **GitHub Actions**: $([ -d ".github/workflows" ] && echo "✅ Configured" || echo "❌ Not found")
- **CI Scripts**: $([ -f "scripts/automation/ci_pipeline.sh" ] && echo "✅ Available" || echo "❌ Missing")
- **Overall Health**: 🟢 Healthy

## 💡 Quick Recommendations

- Ensure all required tools are installed
- Run security audits regularly
- Keep dependencies updated
- Monitor build performance

---
*Generated by Anya-Core CI/CD Pipeline*
EOF
    
    echo "✅ Simple summary generated: ci_metrics_summary.md"
}

main() {
    echo "🚀 Generating simple CI metrics..."
    cd "$PROJECT_ROOT"
    
    generate_simple_metrics
    generate_simple_summary
    
    echo "✅ CI metrics generation completed!"
}

main "$@"
