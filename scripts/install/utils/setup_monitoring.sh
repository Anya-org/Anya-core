#!/bin/bash
# [AIR-3][AIS-3][BPC-3][RES-3]
# Monitoring Setup Script for Anya Core
# Part of the Anya Core Hexagonal Architecture
# Date: 2025-05-21

set -e

# Source common functions
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
UTILS_DIR="${SCRIPT_DIR}"

if [ -f "${UTILS_DIR}/install_common.sh" ]; then
    source "${UTILS_DIR}/install_common.sh"
else
    echo "[ERROR] Common utilities not found: ${UTILS_DIR}/install_common.sh"
    exit 1
fi

# Default configuration
MONITORING_DIR="${PROJECT_ROOT}/monitoring"
GRAFANA_ADMIN_USER="admin"
GRAFANA_ADMIN_PASSWORD="$(openssl rand -base64 32 | head -c 24)"

setup_monitoring() {
    log "INFO" "Setting up monitoring stack..."
    
    # Create monitoring directories
    log "INFO" "Creating monitoring directories..."
    mkdir -p "${MONITORING_DIR}/grafana/provisioning/datasources"
    mkdir -p "${MONITORING_DIR}/grafana/provisioning/dashboards"
    mkdir -p "${MONITORING_DIR}/prometheus/alerts"
    mkdir -p "${MONITORING_DIR}/alertmanager/templates"
    
    # Set proper permissions
    log "INFO" "Setting permissions..."
    chmod -R 755 "${MONITORING_DIR}"
    find "${MONITORING_DIR}" -type f -exec chmod 644 {} \;
    chmod +x "${MONITORING_DIR}/start-monitoring.sh"
    
    # Generate secure credentials
    log "INFO" "Generating secure credentials..."
    local bitcoin_rpc_user="bitcoinrpc"
    local bitcoin_rpc_password="$(openssl rand -base64 32 | head -c 32)"
    
    # Create .env file for docker-compose
    log "INFO" "Creating environment file..."
    cat > "${MONITORING_DIR}/.env" << EOF
# Auto-generated by Anya Core Installer
# Monitoring Stack Configuration

# Grafana
GRAFANA_ADMIN_USER=${GRAFANA_ADMIN_USER}
GRAFANA_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}

# Bitcoin RPC
BITCOIN_RPC_USER=${bitcoin_rpc_user}
BITCOIN_RPC_PASSWORD=${bitcoin_rpc_password}

# Alertmanager Email Configuration
SMTP_FROM=botshelomokoka@gmail.com
SMTP_SMARTHOST=smtp.gmail.com:587
SMTP_AUTH_USERNAME=botshelomokoka@gmail.com
SMTP_AUTH_PASSWORD=your-gmail-app-password  # Use App Password if 2FA is enabled
SMTP_HELO=gmail.com

# Notification Settings
ALERT_EMAIL_RECIPIENT=botshelomokoka@gmail.com
MAINNET_ALERT_RECIPIENT=mainnet-alerts@anyacore.org  # Replace with actual mainnet group

# Slack Integration (optional)
SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}

# PagerDuty Integration (optional)
PAGERDUTY_KEY=${PAGERDUTY_KEY:-}

# Environment Specific Settings
NETWORK_TYPE=${NETWORK:-testnet}
EOF
    
    # Set secure permissions for .env
    chmod 600 "${MONITORING_DIR}/.env"
    
    log "SUCCESS" "Monitoring stack configuration complete"
    log "INFO" "Grafana credentials: ${GRAFANA_ADMIN_USER} / ${GRAFANA_ADMIN_PASSWORD}"
    log "INFO" "Bitcoin RPC credentials: ${bitcoin_rpc_user} / ${bitcoin_rpc_password}"
    
    # Start monitoring services if requested
    if [ "${1:-}" = "--start" ]; then
        start_monitoring
    fi
}

start_monitoring() {
    log "INFO" "Starting monitoring services..."
    cd "${MONITORING_DIR}" || exit 1
    
    if command -v docker-compose &> /dev/null; then
        log "INFO" "Starting services with docker-compose..."
        docker-compose up -d
        
        # Check if services started successfully
        if [ $? -eq 0 ]; then
            log "SUCCESS" "Monitoring services started successfully"
            log "INFO" "Grafana: http://localhost:3000"
            log "INFO" "Prometheus: http://localhost:9090"
            log "INFO" "Alertmanager: http://localhost:9093"
        else
            log "ERROR" "Failed to start monitoring services"
            return 1
        fi
    else
        log "ERROR" "docker-compose not found. Please install Docker and docker-compose first."
        return 1
    fi
}

# Main execution
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    setup_monitoring "$@"
fi
